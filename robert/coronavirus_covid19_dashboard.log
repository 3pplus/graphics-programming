1                                                          The SAS System                              07:20 Tuesday, April 14, 2020

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

WARNING: Unable to copy SASUSER registry to WORK registry. Because of this, you will not see registry customizations during this 
         session.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M6) 
      Licensed to SAS IT, Site 70068128.
NOTE: This session is executing on the X64_10PRO  platform.



NOTE: Analytical products:
      
      SAS/STAT 15.1
      SAS/ETS 15.1
      SAS/IML 15.1
      SAS/QC 15.1

WARNING: Your system is scheduled to expire on May 19, 2020, which is 35 days from now. The SAS System will no longer 
         function on or after that date. Please contact your SAS Installation Representative to obtain your updated SAS 
         Installation Data (SID) file, which includes SETINIT information.
To locate the name of your SAS Installation Representative go to http://support.sas.com/repfinder and provide your site 
number 70068128 and company name as SAS IT. On the SAS REP list provided, locate the REP for operating system Windows.
NOTE: Additional host information:

 X64_10PRO WIN 10.0.18362  Workstation

NOTE: SAS initialization used:
      real time           1.70 seconds
      cpu time            0.10 seconds
      

NOTE: AUTOEXEC processing beginning; file is U:\autoexec.sas.


NOTE: AUTOEXEC processing completed.

1          %let name=coronavirus_covid19_dashboard;
2          filename odsout '.';
3          
4          /*
5          Imitation/variation of Johns Hopkins dashboard:
6          https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6
7          
8          https://github.com/CSSEGISandData/2019-nCoV/tree/master/time_series
9          https://github.com/CSSEGISandData/2019-nCoV/
10         
11         https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series
12         https://github.com/CSSEGISandData/COVID-19/
13         */
14         
15         /*
16         Make a local copy/clone of the GitHub data.
17         gitfn_clone() needs an empty folder, therefore use a new
18         folder name each time, with the date & time in the name.
19         */
20         /*
21         %let gitfolder=./github_clone_&sysdate9._%sysfunc(tranwrd(&systime,:,_));
22         %let gitfolder=./github_clone_17FEB2020;
23         */
24         
25         %let gitfolder=./github_clone_&sysdate9;
26         data _null_;
WARNING: The Base SAS Software product with which DATASTEP is associated will be expiring soon, and is currently in 
         warning mode to indicate this upcoming expiration. Please run PROC SETINIT to obtain more information on your 
         warning period.
27          rc = gitfn_clone("https://github.com/CSSEGISandData/COVID-19/",
28            "&gitfolder");
29          put rc=;
30         run;

rc=0
NOTE: DATA statement used (Total process time):
      real time           30.51 seconds
      cpu time            9.26 seconds
      

31         /*
32         */
2                                                    The SAS System                         07:20 Tuesday, April 14, 2020

33         
34         /*
35         John D. accesses the data like this:
36         https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/
36       ! time_series_19-covid-Confirmed.csv
37         */
38         
39         /* ------------------ Import the confirmed cases data ---------------------- */
40         
41         /*
42         filename confdata "./&gitfolder/time_series/time_series_2019-ncov-Confirmed.csv";
43         filename confdata
43       ! "./&gitfolder/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv";
44         */
45         filename confdata
45       ! "./&gitfolder/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv";
46         proc import datafile=confdata
47          out=confirmed_data dbms=csv replace;
48         getnames=yes;
49         guessingrows=all;
50         run;

51          /**********************************************************************
52          *   PRODUCT:   SAS
53          *   VERSION:   9.4
54          *   CREATOR:   External File Interface
55          *   DATE:      14APR20
56          *   DESC:      Generated SAS Datastep Code
57          *   TEMPLATE SOURCE:  (None Specified.)
58          ***********************************************************************/
59             data WORK.CONFIRMED_DATA    ;
60             %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
61             infile CONFDATA delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
62                informat Province_State $34. ;
63                informat Country_Region $32. ;
64                informat Lat best32. ;
65                informat Long best32. ;
66                informat _1_22_20 best32. ;
67                informat _1_23_20 best32. ;
68                informat _1_24_20 best32. ;
69                informat _1_25_20 best32. ;
70                informat _1_26_20 best32. ;
71                informat _1_27_20 best32. ;
72                informat _1_28_20 best32. ;
73                informat _1_29_20 best32. ;
74                informat _1_30_20 best32. ;
75                informat _1_31_20 best32. ;
76                informat _2_1_20 best32. ;
77                informat _2_2_20 best32. ;
78                informat _2_3_20 best32. ;
79                informat _2_4_20 best32. ;
80                informat _2_5_20 best32. ;
81                informat _2_6_20 best32. ;
82                informat _2_7_20 best32. ;
83                informat _2_8_20 best32. ;
84                informat _2_9_20 best32. ;
85                informat _2_10_20 best32. ;
86                informat _2_11_20 best32. ;
87                informat _2_12_20 best32. ;
88                informat _2_13_20 best32. ;
89                informat _2_14_20 best32. ;
90                informat _2_15_20 best32. ;
91                informat _2_16_20 best32. ;
92                informat _2_17_20 best32. ;
93                informat _2_18_20 best32. ;
94                informat _2_19_20 best32. ;
95                informat _2_20_20 best32. ;
96                informat _2_21_20 best32. ;
97                informat _2_22_20 best32. ;
98                informat _2_23_20 best32. ;
99                informat _2_24_20 best32. ;
100               informat _2_25_20 best32. ;
101               informat _2_26_20 best32. ;
102               informat _2_27_20 best32. ;
103               informat _2_28_20 best32. ;
104               informat _2_29_20 best32. ;
105               informat _3_1_20 best32. ;
106               informat _3_2_20 best32. ;
107               informat _3_3_20 best32. ;
108               informat _3_4_20 best32. ;
109               informat _3_5_20 best32. ;
110               informat _3_6_20 best32. ;
3                                                    The SAS System                         07:20 Tuesday, April 14, 2020

111               informat _3_7_20 best32. ;
112               informat _3_8_20 best32. ;
113               informat _3_9_20 best32. ;
114               informat _3_10_20 best32. ;
115               informat _3_11_20 best32. ;
116               informat _3_12_20 best32. ;
117               informat _3_13_20 best32. ;
118               informat _3_14_20 best32. ;
119               informat _3_15_20 best32. ;
120               informat _3_16_20 best32. ;
121               informat _3_17_20 best32. ;
122               informat _3_18_20 best32. ;
123               informat _3_19_20 best32. ;
124               informat _3_20_20 best32. ;
125               informat _3_21_20 best32. ;
126               informat _3_22_20 best32. ;
127               informat _3_23_20 best32. ;
128               informat _3_24_20 best32. ;
129               informat _3_25_20 best32. ;
130               informat _3_26_20 best32. ;
131               informat _3_27_20 best32. ;
132               informat _3_28_20 best32. ;
133               informat _3_29_20 best32. ;
134               informat _3_30_20 best32. ;
135               informat _3_31_20 best32. ;
136               informat _4_1_20 best32. ;
137               informat _4_2_20 best32. ;
138               informat _4_3_20 best32. ;
139               informat _4_4_20 best32. ;
140               informat _4_5_20 best32. ;
141               informat _4_6_20 best32. ;
142               informat _4_7_20 best32. ;
143               informat _4_8_20 best32. ;
144               informat _4_9_20 best32. ;
145               informat _4_10_20 best32. ;
146               informat _4_11_20 best32. ;
147               informat _4_12_20 best32. ;
148               informat _4_13_20 best32. ;
149               format Province_State $34. ;
150               format Country_Region $32. ;
151               format Lat best12. ;
152               format Long best12. ;
153               format _1_22_20 best12. ;
154               format _1_23_20 best12. ;
155               format _1_24_20 best12. ;
156               format _1_25_20 best12. ;
157               format _1_26_20 best12. ;
158               format _1_27_20 best12. ;
159               format _1_28_20 best12. ;
160               format _1_29_20 best12. ;
161               format _1_30_20 best12. ;
162               format _1_31_20 best12. ;
163               format _2_1_20 best12. ;
164               format _2_2_20 best12. ;
165               format _2_3_20 best12. ;
166               format _2_4_20 best12. ;
167               format _2_5_20 best12. ;
168               format _2_6_20 best12. ;
169               format _2_7_20 best12. ;
170               format _2_8_20 best12. ;
171               format _2_9_20 best12. ;
172               format _2_10_20 best12. ;
173               format _2_11_20 best12. ;
174               format _2_12_20 best12. ;
175               format _2_13_20 best12. ;
176               format _2_14_20 best12. ;
177               format _2_15_20 best12. ;
178               format _2_16_20 best12. ;
179               format _2_17_20 best12. ;
180               format _2_18_20 best12. ;
181               format _2_19_20 best12. ;
182               format _2_20_20 best12. ;
183               format _2_21_20 best12. ;
184               format _2_22_20 best12. ;
185               format _2_23_20 best12. ;
186               format _2_24_20 best12. ;
187               format _2_25_20 best12. ;
188               format _2_26_20 best12. ;
189               format _2_27_20 best12. ;
190               format _2_28_20 best12. ;
191               format _2_29_20 best12. ;
192               format _3_1_20 best12. ;
4                                                    The SAS System                         07:20 Tuesday, April 14, 2020

193               format _3_2_20 best12. ;
194               format _3_3_20 best12. ;
195               format _3_4_20 best12. ;
196               format _3_5_20 best12. ;
197               format _3_6_20 best12. ;
198               format _3_7_20 best12. ;
199               format _3_8_20 best12. ;
200               format _3_9_20 best12. ;
201               format _3_10_20 best12. ;
202               format _3_11_20 best12. ;
203               format _3_12_20 best12. ;
204               format _3_13_20 best12. ;
205               format _3_14_20 best12. ;
206               format _3_15_20 best12. ;
207               format _3_16_20 best12. ;
208               format _3_17_20 best12. ;
209               format _3_18_20 best12. ;
210               format _3_19_20 best12. ;
211               format _3_20_20 best12. ;
212               format _3_21_20 best12. ;
213               format _3_22_20 best12. ;
214               format _3_23_20 best12. ;
215               format _3_24_20 best12. ;
216               format _3_25_20 best12. ;
217               format _3_26_20 best12. ;
218               format _3_27_20 best12. ;
219               format _3_28_20 best12. ;
220               format _3_29_20 best12. ;
221               format _3_30_20 best12. ;
222               format _3_31_20 best12. ;
223               format _4_1_20 best12. ;
224               format _4_2_20 best12. ;
225               format _4_3_20 best12. ;
226               format _4_4_20 best12. ;
227               format _4_5_20 best12. ;
228               format _4_6_20 best12. ;
229               format _4_7_20 best12. ;
230               format _4_8_20 best12. ;
231               format _4_9_20 best12. ;
232               format _4_10_20 best12. ;
233               format _4_11_20 best12. ;
234               format _4_12_20 best12. ;
235               format _4_13_20 best12. ;
236            input
237                        Province_State  $
238                        Country_Region  $
239                        Lat
240                        Long
241                        _1_22_20
242                        _1_23_20
243                        _1_24_20
244                        _1_25_20
245                        _1_26_20
246                        _1_27_20
247                        _1_28_20
248                        _1_29_20
249                        _1_30_20
250                        _1_31_20
251                        _2_1_20
252                        _2_2_20
253                        _2_3_20
254                        _2_4_20
255                        _2_5_20
256                        _2_6_20
257                        _2_7_20
258                        _2_8_20
259                        _2_9_20
260                        _2_10_20
261                        _2_11_20
262                        _2_12_20
263                        _2_13_20
264                        _2_14_20
265                        _2_15_20
266                        _2_16_20
267                        _2_17_20
268                        _2_18_20
269                        _2_19_20
270                        _2_20_20
271                        _2_21_20
272                        _2_22_20
273                        _2_23_20
274                        _2_24_20
5                                                    The SAS System                         07:20 Tuesday, April 14, 2020

275                        _2_25_20
276                        _2_26_20
277                        _2_27_20
278                        _2_28_20
279                        _2_29_20
280                        _3_1_20
281                        _3_2_20
282                        _3_3_20
283                        _3_4_20
284                        _3_5_20
285                        _3_6_20
286                        _3_7_20
287                        _3_8_20
288                        _3_9_20
289                        _3_10_20
290                        _3_11_20
291                        _3_12_20
292                        _3_13_20
293                        _3_14_20
294                        _3_15_20
295                        _3_16_20
296                        _3_17_20
297                        _3_18_20
298                        _3_19_20
299                        _3_20_20
300                        _3_21_20
301                        _3_22_20
302                        _3_23_20
303                        _3_24_20
304                        _3_25_20
305                        _3_26_20
306                        _3_27_20
307                        _3_28_20
308                        _3_29_20
309                        _3_30_20
310                        _3_31_20
311                        _4_1_20
312                        _4_2_20
313                        _4_3_20
314                        _4_4_20
315                        _4_5_20
316                        _4_6_20
317                        _4_7_20
318                        _4_8_20
319                        _4_9_20
320                        _4_10_20
321                        _4_11_20
322                        _4_12_20
323                        _4_13_20
324            ;
325            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
326            run;

NOTE: The infile CONFDATA is:
      
      Filename=U:\web\democd103\.\github_clone_14APR2020\csse_covid_19_data\csse_covid_19_time_series\time_series_covid19
      _confirmed_global.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=68591,
      Last Modified=14Apr2020:07:21:23,
      Create Time=14Apr2020:07:21:23

NOTE: 264 records were read from the infile CONFDATA.
      The minimum record length was 185.
      The maximum record length was 511.
NOTE: The data set WORK.CONFIRMED_DATA has 264 observations and 87 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

264 rows created in WORK.CONFIRMED_DATA from CONFDATA.
  
  
  
NOTE: WORK.CONFIRMED_DATA data set was successfully created.
NOTE: The data set WORK.CONFIRMED_DATA has 264 observations and 87 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           1.88 seconds
      cpu time            0.64 seconds
      

327        
6                                                    The SAS System                         07:20 Tuesday, April 14, 2020

328        /* Needed, because of https://github.com/CSSEGISandData/COVID-19/issues/559 */
329        /* The state summary has no comma in the province_state variable - don't output those lines, or you'll
329      ! double-count) */
330        /*
331        data confirmed_data; set confirmed_data;
332        if country_region^='US' or (country_region='US' and (index(province_state,',')^=0 or province_state in
332      ! ('Diamond Princess' 'Grand Princess')))  then output;
333        run;
334        */
335        
336        proc transpose data=confirmed_data out=confirmed_data (rename=(_name_=datestring col1=confirmed));
337        by Province_State Country_Region Lat Long notsorted;
338        run;

NOTE: There were 264 observations read from the data set WORK.CONFIRMED_DATA.
NOTE: The data set WORK.CONFIRMED_DATA has 21912 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

339        
340        /* The date/timestamp is in a string - parse it apart, and create a real date variable */
341        data confirmed_data (drop = month day year datestring);
342         set confirmed_data;
343        Country_Region=trim(left(Country_Region));
344        if province_state='Curacao' then Country_Region='Curacao';
345        if province_state='Greenland' then Country_Region='Greenland';
346        if province_state='Faroe Islands' then Country_Region='Faroe Islands';
347        if province_state='Aruba' then Country_Region='Aruba';
348        if province_state='Sint Maarten' then Country_Region='Sint Maarten';
349        if province_state='Bonaire, Sint Eustatius and Saba' then Country_Region='Bonaire, Sint Eustatius and Saba';
350        if country_region='United Arab Emirates' then Country_Region='UAE';
351        if country_region='Iran (Islamic Republic of)' then country_region='Iran';
352        month=.; month=scan(datestring,1,'_');
353        day=.; day=scan(datestring,2,'_');
354        year=.; year=2000+scan(datestring,3,'_');
355        if confirmed=0 then confirmed=.;
356        format snapshot date9.;
357        snapshot=mdy(month,day,year);
358        run;

NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      352:16   353:12   354:19   
NOTE: There were 21912 observations read from the data set WORK.CONFIRMED_DATA.
NOTE: The data set WORK.CONFIRMED_DATA has 21912 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

359        /*
360        Create a table with just the latest date/timestamp.
361        You'll use this latest data in all but the timeseries plot.
362        */
363        proc sql noprint;
364        create table latest_confirmed as
365        select unique *
366        from confirmed_data
367        having snapshot=max(snapshot);
NOTE: The query requires remerging summary statistics back with the original data.
NOTE: Table WORK.LATEST_CONFIRMED created, with 264 rows and 6 columns.

368        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.13 seconds
      cpu time            0.01 seconds
      

368      !       run;
369        
370        /* Create macro variables with the data & time, to use in the title */
371        proc sql noprint;
372        select unique(snapshot) format=nldate20. into :datestr separated by ' ' from latest_confirmed;
373        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

373      !       run;
374        
7                                                    The SAS System                         07:20 Tuesday, April 14, 2020

375        /* save a copy of the dataset, to use in other programs */
376        libname robsdata '.';
NOTE: Libref ROBSDATA was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: U:\web\democd103
377        data robsdata.confirmed_data; set confirmed_data;
378        run;

NOTE: There were 21912 observations read from the data set WORK.CONFIRMED_DATA.
NOTE: The data set ROBSDATA.CONFIRMED_DATA has 21912 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.03 seconds
      

379        
380        /* ------------------ Import the deaths data ---------------------- */
381        
382        /*
383        filename deatdata "./&gitfolder/time_series/time_series_2019-ncov-Deaths.csv";
384        filename deatdata "./&gitfolder/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv";
385        */
386        filename deatdata
386      ! "./&gitfolder/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv";
387        proc import datafile=deatdata
388         out=death_data dbms=csv replace;
389        getnames=yes;
390        guessingrows=all;
391        run;

392         /**********************************************************************
393         *   PRODUCT:   SAS
394         *   VERSION:   9.4
395         *   CREATOR:   External File Interface
396         *   DATE:      14APR20
397         *   DESC:      Generated SAS Datastep Code
398         *   TEMPLATE SOURCE:  (None Specified.)
399         ***********************************************************************/
400            data WORK.DEATH_DATA    ;
401            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
402            infile DEATDATA delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
403               informat Province_State $34. ;
404               informat Country_Region $32. ;
405               informat Lat best32. ;
406               informat Long best32. ;
407               informat _1_22_20 best32. ;
408               informat _1_23_20 best32. ;
409               informat _1_24_20 best32. ;
410               informat _1_25_20 best32. ;
411               informat _1_26_20 best32. ;
412               informat _1_27_20 best32. ;
413               informat _1_28_20 best32. ;
414               informat _1_29_20 best32. ;
415               informat _1_30_20 best32. ;
416               informat _1_31_20 best32. ;
417               informat _2_1_20 best32. ;
418               informat _2_2_20 best32. ;
419               informat _2_3_20 best32. ;
420               informat _2_4_20 best32. ;
421               informat _2_5_20 best32. ;
422               informat _2_6_20 best32. ;
423               informat _2_7_20 best32. ;
424               informat _2_8_20 best32. ;
425               informat _2_9_20 best32. ;
426               informat _2_10_20 best32. ;
427               informat _2_11_20 best32. ;
428               informat _2_12_20 best32. ;
429               informat _2_13_20 best32. ;
430               informat _2_14_20 best32. ;
431               informat _2_15_20 best32. ;
432               informat _2_16_20 best32. ;
433               informat _2_17_20 best32. ;
434               informat _2_18_20 best32. ;
435               informat _2_19_20 best32. ;
436               informat _2_20_20 best32. ;
437               informat _2_21_20 best32. ;
438               informat _2_22_20 best32. ;
439               informat _2_23_20 best32. ;
440               informat _2_24_20 best32. ;
441               informat _2_25_20 best32. ;
442               informat _2_26_20 best32. ;
443               informat _2_27_20 best32. ;
8                                                    The SAS System                         07:20 Tuesday, April 14, 2020

444               informat _2_28_20 best32. ;
445               informat _2_29_20 best32. ;
446               informat _3_1_20 best32. ;
447               informat _3_2_20 best32. ;
448               informat _3_3_20 best32. ;
449               informat _3_4_20 best32. ;
450               informat _3_5_20 best32. ;
451               informat _3_6_20 best32. ;
452               informat _3_7_20 best32. ;
453               informat _3_8_20 best32. ;
454               informat _3_9_20 best32. ;
455               informat _3_10_20 best32. ;
456               informat _3_11_20 best32. ;
457               informat _3_12_20 best32. ;
458               informat _3_13_20 best32. ;
459               informat _3_14_20 best32. ;
460               informat _3_15_20 best32. ;
461               informat _3_16_20 best32. ;
462               informat _3_17_20 best32. ;
463               informat _3_18_20 best32. ;
464               informat _3_19_20 best32. ;
465               informat _3_20_20 best32. ;
466               informat _3_21_20 best32. ;
467               informat _3_22_20 best32. ;
468               informat _3_23_20 best32. ;
469               informat _3_24_20 best32. ;
470               informat _3_25_20 best32. ;
471               informat _3_26_20 best32. ;
472               informat _3_27_20 best32. ;
473               informat _3_28_20 best32. ;
474               informat _3_29_20 best32. ;
475               informat _3_30_20 best32. ;
476               informat _3_31_20 best32. ;
477               informat _4_1_20 best32. ;
478               informat _4_2_20 best32. ;
479               informat _4_3_20 best32. ;
480               informat _4_4_20 best32. ;
481               informat _4_5_20 best32. ;
482               informat _4_6_20 best32. ;
483               informat _4_7_20 best32. ;
484               informat _4_8_20 best32. ;
485               informat _4_9_20 best32. ;
486               informat _4_10_20 best32. ;
487               informat _4_11_20 best32. ;
488               informat _4_12_20 best32. ;
489               informat _4_13_20 best32. ;
490               format Province_State $34. ;
491               format Country_Region $32. ;
492               format Lat best12. ;
493               format Long best12. ;
494               format _1_22_20 best12. ;
495               format _1_23_20 best12. ;
496               format _1_24_20 best12. ;
497               format _1_25_20 best12. ;
498               format _1_26_20 best12. ;
499               format _1_27_20 best12. ;
500               format _1_28_20 best12. ;
501               format _1_29_20 best12. ;
502               format _1_30_20 best12. ;
503               format _1_31_20 best12. ;
504               format _2_1_20 best12. ;
505               format _2_2_20 best12. ;
506               format _2_3_20 best12. ;
507               format _2_4_20 best12. ;
508               format _2_5_20 best12. ;
509               format _2_6_20 best12. ;
510               format _2_7_20 best12. ;
511               format _2_8_20 best12. ;
512               format _2_9_20 best12. ;
513               format _2_10_20 best12. ;
514               format _2_11_20 best12. ;
515               format _2_12_20 best12. ;
516               format _2_13_20 best12. ;
517               format _2_14_20 best12. ;
518               format _2_15_20 best12. ;
519               format _2_16_20 best12. ;
520               format _2_17_20 best12. ;
521               format _2_18_20 best12. ;
522               format _2_19_20 best12. ;
523               format _2_20_20 best12. ;
524               format _2_21_20 best12. ;
525               format _2_22_20 best12. ;
9                                                    The SAS System                         07:20 Tuesday, April 14, 2020

526               format _2_23_20 best12. ;
527               format _2_24_20 best12. ;
528               format _2_25_20 best12. ;
529               format _2_26_20 best12. ;
530               format _2_27_20 best12. ;
531               format _2_28_20 best12. ;
532               format _2_29_20 best12. ;
533               format _3_1_20 best12. ;
534               format _3_2_20 best12. ;
535               format _3_3_20 best12. ;
536               format _3_4_20 best12. ;
537               format _3_5_20 best12. ;
538               format _3_6_20 best12. ;
539               format _3_7_20 best12. ;
540               format _3_8_20 best12. ;
541               format _3_9_20 best12. ;
542               format _3_10_20 best12. ;
543               format _3_11_20 best12. ;
544               format _3_12_20 best12. ;
545               format _3_13_20 best12. ;
546               format _3_14_20 best12. ;
547               format _3_15_20 best12. ;
548               format _3_16_20 best12. ;
549               format _3_17_20 best12. ;
550               format _3_18_20 best12. ;
551               format _3_19_20 best12. ;
552               format _3_20_20 best12. ;
553               format _3_21_20 best12. ;
554               format _3_22_20 best12. ;
555               format _3_23_20 best12. ;
556               format _3_24_20 best12. ;
557               format _3_25_20 best12. ;
558               format _3_26_20 best12. ;
559               format _3_27_20 best12. ;
560               format _3_28_20 best12. ;
561               format _3_29_20 best12. ;
562               format _3_30_20 best12. ;
563               format _3_31_20 best12. ;
564               format _4_1_20 best12. ;
565               format _4_2_20 best12. ;
566               format _4_3_20 best12. ;
567               format _4_4_20 best12. ;
568               format _4_5_20 best12. ;
569               format _4_6_20 best12. ;
570               format _4_7_20 best12. ;
571               format _4_8_20 best12. ;
572               format _4_9_20 best12. ;
573               format _4_10_20 best12. ;
574               format _4_11_20 best12. ;
575               format _4_12_20 best12. ;
576               format _4_13_20 best12. ;
577            input
578                        Province_State  $
579                        Country_Region  $
580                        Lat
581                        Long
582                        _1_22_20
583                        _1_23_20
584                        _1_24_20
585                        _1_25_20
586                        _1_26_20
587                        _1_27_20
588                        _1_28_20
589                        _1_29_20
590                        _1_30_20
591                        _1_31_20
592                        _2_1_20
593                        _2_2_20
594                        _2_3_20
595                        _2_4_20
596                        _2_5_20
597                        _2_6_20
598                        _2_7_20
599                        _2_8_20
600                        _2_9_20
601                        _2_10_20
602                        _2_11_20
603                        _2_12_20
604                        _2_13_20
605                        _2_14_20
606                        _2_15_20
607                        _2_16_20
10                                                   The SAS System                         07:20 Tuesday, April 14, 2020

608                        _2_17_20
609                        _2_18_20
610                        _2_19_20
611                        _2_20_20
612                        _2_21_20
613                        _2_22_20
614                        _2_23_20
615                        _2_24_20
616                        _2_25_20
617                        _2_26_20
618                        _2_27_20
619                        _2_28_20
620                        _2_29_20
621                        _3_1_20
622                        _3_2_20
623                        _3_3_20
624                        _3_4_20
625                        _3_5_20
626                        _3_6_20
627                        _3_7_20
628                        _3_8_20
629                        _3_9_20
630                        _3_10_20
631                        _3_11_20
632                        _3_12_20
633                        _3_13_20
634                        _3_14_20
635                        _3_15_20
636                        _3_16_20
637                        _3_17_20
638                        _3_18_20
639                        _3_19_20
640                        _3_20_20
641                        _3_21_20
642                        _3_22_20
643                        _3_23_20
644                        _3_24_20
645                        _3_25_20
646                        _3_26_20
647                        _3_27_20
648                        _3_28_20
649                        _3_29_20
650                        _3_30_20
651                        _3_31_20
652                        _4_1_20
653                        _4_2_20
654                        _4_3_20
655                        _4_4_20
656                        _4_5_20
657                        _4_6_20
658                        _4_7_20
659                        _4_8_20
660                        _4_9_20
661                        _4_10_20
662                        _4_11_20
663                        _4_12_20
664                        _4_13_20
665            ;
666            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
667            run;

NOTE: The infile DEATDATA is:
      
      Filename=U:\web\democd103\.\github_clone_14APR2020\csse_covid_19_data\csse_covid_19_time_series\time_series_covid19
      _deaths_global.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=55150,
      Last Modified=14Apr2020:07:21:23,
      Create Time=14Apr2020:07:21:23

NOTE: 264 records were read from the infile DEATDATA.
      The minimum record length was 181.
      The maximum record length was 417.
NOTE: The data set WORK.DEATH_DATA has 264 observations and 87 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

264 rows created in WORK.DEATH_DATA from DEATDATA.
  
  
  
11                                                   The SAS System                         07:20 Tuesday, April 14, 2020

NOTE: WORK.DEATH_DATA data set was successfully created.
NOTE: The data set WORK.DEATH_DATA has 264 observations and 87 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.63 seconds
      cpu time            0.39 seconds
      

668        
669        /* Needed, because of https://github.com/CSSEGISandData/COVID-19/issues/559 */
670        /* The state summary has no comma in the province_state variable - don't output those lines, or you'll
670      ! double-count) */
671        /*
672        data death_data; set death_data;
673        if country_region^='US' or (country_region='US' and (index(province_state,',')^=0 or province_state in
673      ! ('Diamond Princess' 'Grand Princess')))  then output;
674        run;
675        */
676        
677        proc transpose data=death_data out=death_data (rename=(_name_=datestring col1=deaths));
678        by Province_State Country_Region Lat Long notsorted;
679        run;

NOTE: There were 264 observations read from the data set WORK.DEATH_DATA.
NOTE: The data set WORK.DEATH_DATA has 21912 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

680        
681        /* The date/timestamp is in a string - parse it apart, and create a real date variable */
682        data death_data (drop = month day year datestring);
683         set death_data;
684        Country_Region=trim(left(Country_Region));
685        if province_state='Curacao' then Country_Region='Curacao';
686        if province_state='Greenland' then Country_Region='Greenland';
687        if province_state='Faroe Islands' then Country_Region='Faroe Islands';
688        if province_state='Aruba' then Country_Region='Aruba';
689        if province_state='Sint Maarten' then Country_Region='Sint Maarten';
690        if province_state='Bonaire, Sint Eustatius and Saba' then Country_Region='Bonaire, Sint Eustatius and Saba';
691        if Country_Region='United Arab Emirates' then Country_Region='UAE';
692        if country_region='Iran (Islamic Republic of)' then country_region='Iran';
693        month=.; month=scan(datestring,1,'_');
694        day=.; day=scan(datestring,2,'_');
695        year=.; year=2000+scan(datestring,3,'_');
696        if deaths=0 then deaths=.;
697        format snapshot date9.;
698        snapshot=mdy(month,day,year);
699        run;

NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      693:16   694:12   695:19   
NOTE: There were 21912 observations read from the data set WORK.DEATH_DATA.
NOTE: The data set WORK.DEATH_DATA has 21912 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

700        
701        proc sql noprint;
702        create table latest_deaths as
703        select unique *
704        from death_data
705        having snapshot=max(snapshot);
NOTE: The query requires remerging summary statistics back with the original data.
NOTE: Table WORK.LATEST_DEATHS created, with 264 rows and 6 columns.

706        quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

706      !       run;
707        
708        
709        /* ------------------ Import the recovered cases data ---------------------- */
710        
711        /*
712        filename recodata "./&gitfolder/time_series/time_series_2019-ncov-Recovered.csv";
713        filename recodata
12                                                   The SAS System                         07:20 Tuesday, April 14, 2020

713      ! "./&gitfolder/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv";
714        */
715        filename recodata
715      ! "./&gitfolder/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv";
716        proc import datafile=recodata
717         out=recovered_data dbms=csv replace;
718        getnames=yes;
719        guessingrows=all;
720        run;

721         /**********************************************************************
722         *   PRODUCT:   SAS
723         *   VERSION:   9.4
724         *   CREATOR:   External File Interface
725         *   DATE:      14APR20
726         *   DESC:      Generated SAS Datastep Code
727         *   TEMPLATE SOURCE:  (None Specified.)
728         ***********************************************************************/
729            data WORK.RECOVERED_DATA    ;
730            %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
731            infile RECODATA delimiter = ',' MISSOVER DSD lrecl=32767 firstobs=2 ;
732               informat Province_State $34. ;
733               informat Country_Region $32. ;
734               informat Lat best32. ;
735               informat Long best32. ;
736               informat _1_22_20 best32. ;
737               informat _1_23_20 best32. ;
738               informat _1_24_20 best32. ;
739               informat _1_25_20 best32. ;
740               informat _1_26_20 best32. ;
741               informat _1_27_20 best32. ;
742               informat _1_28_20 best32. ;
743               informat _1_29_20 best32. ;
744               informat _1_30_20 best32. ;
745               informat _1_31_20 best32. ;
746               informat _2_1_20 best32. ;
747               informat _2_2_20 best32. ;
748               informat _2_3_20 best32. ;
749               informat _2_4_20 best32. ;
750               informat _2_5_20 best32. ;
751               informat _2_6_20 best32. ;
752               informat _2_7_20 best32. ;
753               informat _2_8_20 best32. ;
754               informat _2_9_20 best32. ;
755               informat _2_10_20 best32. ;
756               informat _2_11_20 best32. ;
757               informat _2_12_20 best32. ;
758               informat _2_13_20 best32. ;
759               informat _2_14_20 best32. ;
760               informat _2_15_20 best32. ;
761               informat _2_16_20 best32. ;
762               informat _2_17_20 best32. ;
763               informat _2_18_20 best32. ;
764               informat _2_19_20 best32. ;
765               informat _2_20_20 best32. ;
766               informat _2_21_20 best32. ;
767               informat _2_22_20 best32. ;
768               informat _2_23_20 best32. ;
769               informat _2_24_20 best32. ;
770               informat _2_25_20 best32. ;
771               informat _2_26_20 best32. ;
772               informat _2_27_20 best32. ;
773               informat _2_28_20 best32. ;
774               informat _2_29_20 best32. ;
775               informat _3_1_20 best32. ;
776               informat _3_2_20 best32. ;
777               informat _3_3_20 best32. ;
778               informat _3_4_20 best32. ;
779               informat _3_5_20 best32. ;
780               informat _3_6_20 best32. ;
781               informat _3_7_20 best32. ;
782               informat _3_8_20 best32. ;
783               informat _3_9_20 best32. ;
784               informat _3_10_20 best32. ;
785               informat _3_11_20 best32. ;
786               informat _3_12_20 best32. ;
787               informat _3_13_20 best32. ;
788               informat _3_14_20 best32. ;
789               informat _3_15_20 best32. ;
790               informat _3_16_20 best32. ;
791               informat _3_17_20 best32. ;
792               informat _3_18_20 best32. ;
13                                                   The SAS System                         07:20 Tuesday, April 14, 2020

793               informat _3_19_20 best32. ;
794               informat _3_20_20 best32. ;
795               informat _3_21_20 best32. ;
796               informat _3_22_20 best32. ;
797               informat _3_23_20 best32. ;
798               informat _3_24_20 best32. ;
799               informat _3_25_20 best32. ;
800               informat _3_26_20 best32. ;
801               informat _3_27_20 best32. ;
802               informat _3_28_20 best32. ;
803               informat _3_29_20 best32. ;
804               informat _3_30_20 best32. ;
805               informat _3_31_20 best32. ;
806               informat _4_1_20 best32. ;
807               informat _4_2_20 best32. ;
808               informat _4_3_20 best32. ;
809               informat _4_4_20 best32. ;
810               informat _4_5_20 best32. ;
811               informat _4_6_20 best32. ;
812               informat _4_7_20 best32. ;
813               informat _4_8_20 best32. ;
814               informat _4_9_20 best32. ;
815               informat _4_10_20 best32. ;
816               informat _4_11_20 best32. ;
817               informat _4_12_20 best32. ;
818               informat _4_13_20 best32. ;
819               format Province_State $34. ;
820               format Country_Region $32. ;
821               format Lat best12. ;
822               format Long best12. ;
823               format _1_22_20 best12. ;
824               format _1_23_20 best12. ;
825               format _1_24_20 best12. ;
826               format _1_25_20 best12. ;
827               format _1_26_20 best12. ;
828               format _1_27_20 best12. ;
829               format _1_28_20 best12. ;
830               format _1_29_20 best12. ;
831               format _1_30_20 best12. ;
832               format _1_31_20 best12. ;
833               format _2_1_20 best12. ;
834               format _2_2_20 best12. ;
835               format _2_3_20 best12. ;
836               format _2_4_20 best12. ;
837               format _2_5_20 best12. ;
838               format _2_6_20 best12. ;
839               format _2_7_20 best12. ;
840               format _2_8_20 best12. ;
841               format _2_9_20 best12. ;
842               format _2_10_20 best12. ;
843               format _2_11_20 best12. ;
844               format _2_12_20 best12. ;
845               format _2_13_20 best12. ;
846               format _2_14_20 best12. ;
847               format _2_15_20 best12. ;
848               format _2_16_20 best12. ;
849               format _2_17_20 best12. ;
850               format _2_18_20 best12. ;
851               format _2_19_20 best12. ;
852               format _2_20_20 best12. ;
853               format _2_21_20 best12. ;
854               format _2_22_20 best12. ;
855               format _2_23_20 best12. ;
856               format _2_24_20 best12. ;
857               format _2_25_20 best12. ;
858               format _2_26_20 best12. ;
859               format _2_27_20 best12. ;
860               format _2_28_20 best12. ;
861               format _2_29_20 best12. ;
862               format _3_1_20 best12. ;
863               format _3_2_20 best12. ;
864               format _3_3_20 best12. ;
865               format _3_4_20 best12. ;
866               format _3_5_20 best12. ;
867               format _3_6_20 best12. ;
868               format _3_7_20 best12. ;
869               format _3_8_20 best12. ;
870               format _3_9_20 best12. ;
871               format _3_10_20 best12. ;
872               format _3_11_20 best12. ;
873               format _3_12_20 best12. ;
874               format _3_13_20 best12. ;
14                                                   The SAS System                         07:20 Tuesday, April 14, 2020

875               format _3_14_20 best12. ;
876               format _3_15_20 best12. ;
877               format _3_16_20 best12. ;
878               format _3_17_20 best12. ;
879               format _3_18_20 best12. ;
880               format _3_19_20 best12. ;
881               format _3_20_20 best12. ;
882               format _3_21_20 best12. ;
883               format _3_22_20 best12. ;
884               format _3_23_20 best12. ;
885               format _3_24_20 best12. ;
886               format _3_25_20 best12. ;
887               format _3_26_20 best12. ;
888               format _3_27_20 best12. ;
889               format _3_28_20 best12. ;
890               format _3_29_20 best12. ;
891               format _3_30_20 best12. ;
892               format _3_31_20 best12. ;
893               format _4_1_20 best12. ;
894               format _4_2_20 best12. ;
895               format _4_3_20 best12. ;
896               format _4_4_20 best12. ;
897               format _4_5_20 best12. ;
898               format _4_6_20 best12. ;
899               format _4_7_20 best12. ;
900               format _4_8_20 best12. ;
901               format _4_9_20 best12. ;
902               format _4_10_20 best12. ;
903               format _4_11_20 best12. ;
904               format _4_12_20 best12. ;
905               format _4_13_20 best12. ;
906            input
907                        Province_State  $
908                        Country_Region  $
909                        Lat
910                        Long
911                        _1_22_20
912                        _1_23_20
913                        _1_24_20
914                        _1_25_20
915                        _1_26_20
916                        _1_27_20
917                        _1_28_20
918                        _1_29_20
919                        _1_30_20
920                        _1_31_20
921                        _2_1_20
922                        _2_2_20
923                        _2_3_20
924                        _2_4_20
925                        _2_5_20
926                        _2_6_20
927                        _2_7_20
928                        _2_8_20
929                        _2_9_20
930                        _2_10_20
931                        _2_11_20
932                        _2_12_20
933                        _2_13_20
934                        _2_14_20
935                        _2_15_20
936                        _2_16_20
937                        _2_17_20
938                        _2_18_20
939                        _2_19_20
940                        _2_20_20
941                        _2_21_20
942                        _2_22_20
943                        _2_23_20
944                        _2_24_20
945                        _2_25_20
946                        _2_26_20
947                        _2_27_20
948                        _2_28_20
949                        _2_29_20
950                        _3_1_20
951                        _3_2_20
952                        _3_3_20
953                        _3_4_20
954                        _3_5_20
955                        _3_6_20
956                        _3_7_20
15                                                   The SAS System                         07:20 Tuesday, April 14, 2020

957                        _3_8_20
958                        _3_9_20
959                        _3_10_20
960                        _3_11_20
961                        _3_12_20
962                        _3_13_20
963                        _3_14_20
964                        _3_15_20
965                        _3_16_20
966                        _3_17_20
967                        _3_18_20
968                        _3_19_20
969                        _3_20_20
970                        _3_21_20
971                        _3_22_20
972                        _3_23_20
973                        _3_24_20
974                        _3_25_20
975                        _3_26_20
976                        _3_27_20
977                        _3_28_20
978                        _3_29_20
979                        _3_30_20
980                        _3_31_20
981                        _4_1_20
982                        _4_2_20
983                        _4_3_20
984                        _4_4_20
985                        _4_5_20
986                        _4_6_20
987                        _4_7_20
988                        _4_8_20
989                        _4_9_20
990                        _4_10_20
991                        _4_11_20
992                        _4_12_20
993                        _4_13_20
994            ;
995            if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
996            run;

NOTE: The infile RECODATA is:
      
      Filename=U:\web\democd103\.\github_clone_14APR2020\csse_covid_19_data\csse_covid_19_time_series\time_series_covid19
      _recovered_global.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=57683,
      Last Modified=14Apr2020:07:21:23,
      Create Time=14Apr2020:07:21:23

NOTE: 250 records were read from the infile RECODATA.
      The minimum record length was 182.
      The maximum record length was 473.
NOTE: The data set WORK.RECOVERED_DATA has 250 observations and 87 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

250 rows created in WORK.RECOVERED_DATA from RECODATA.
  
  
  
NOTE: WORK.RECOVERED_DATA data set was successfully created.
NOTE: The data set WORK.RECOVERED_DATA has 250 observations and 87 variables.
NOTE: PROCEDURE IMPORT used (Total process time):
      real time           0.63 seconds
      cpu time            0.43 seconds
      

997        
998        /* Needed, because of https://github.com/CSSEGISandData/COVID-19/issues/559 */
999        /* The state summary has no comma in the province_state variable - don't output those lines, or you'll
999      ! double-count) */
1000       /*
1001       data recovered_data; set recovered_data;
1002       if country_region^='US' or (country_region='US' and (index(province_state,',')^=0 or province_state in
1002     ! ('Diamond Princess' 'Grand Princess')))  then output;
1003       run;
1004       */
1005       
1006       proc transpose data=recovered_data out=recovered_data (rename=(_name_=datestring col1=recovered));
1007       by Province_State Country_Region Lat Long notsorted;
16                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1008       run;

NOTE: There were 250 observations read from the data set WORK.RECOVERED_DATA.
NOTE: The data set WORK.RECOVERED_DATA has 20750 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

1009       
1010       /* The date/timestamp is in a string - parse it apart, and create a real date variable */
1011       data recovered_data (drop = month day year datestring);
1012        set recovered_data;
1013       Country_Region=trim(left(Country_Region));
1014       if province_state='Curacao' then Country_Region='Curacao';
1015       if province_state='Greenland' then Country_Region='Greenland';
1016       if province_state='Faroe Islands' then Country_Region='Faroe Islands';
1017       if province_state='Aruba' then Country_Region='Aruba';
1018       if province_state='Sint Maarten' then Country_Region='Sint Maarten';
1019       if province_state='Bonaire, Sint Eustatius and Saba' then Country_Region='Bonaire, Sint Eustatius and Saba';
1020       if Country_Region='United Arab Emirates' then Country_Region='UAE';
1021       if country_region='Iran (Islamic Republic of)' then country_region='Iran';
1022       month=.; month=scan(datestring,1,'_');
1023       day=.; day=scan(datestring,2,'_');
1024       year=.; year=2000+scan(datestring,3,'_');
1025       if recovered=0 then recovered=.;
1026       format snapshot dateampm.;
1027       snapshot=mdy(month,day,year);
1028       run;

NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      1022:16   1023:12   1024:19   
NOTE: There were 20750 observations read from the data set WORK.RECOVERED_DATA.
NOTE: The data set WORK.RECOVERED_DATA has 20750 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

1029       
1030       proc sql noprint;
1031       create table latest_recovered as
1032       select unique *
1033       from recovered_data
1034       having snapshot=max(snapshot);
NOTE: The query requires remerging summary statistics back with the original data.
NOTE: Table WORK.LATEST_RECOVERED created, with 250 rows and 6 columns.

1035       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1035     !       run;
1036       
1037       
1038       proc sql noprint;
1039       create table confirmed_increase as
1040       select unique country_region, snapshot, sum(confirmed) as confirmed
1041       from confirmed_data
1042       group by country_region, snapshot
1043       order by country_region, snapshot;
NOTE: Table WORK.CONFIRMED_INCREASE created, with 15853 rows and 3 columns.

1044       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

1044     !       run;
1045       data confirmed_increase; set confirmed_increase;
1046       confirmed_this_day=confirmed-lag(confirmed);
1047       if country_region^=lag(country_region) then confirmed_this_day=.;
1048       run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      8260 at 1046:29   
NOTE: There were 15853 observations read from the data set WORK.CONFIRMED_INCREASE.
NOTE: The data set WORK.CONFIRMED_INCREASE has 15853 observations and 4 variables.
17                                                   The SAS System                         07:20 Tuesday, April 14, 2020

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1049       proc sql noprint;
1050       create table latest_increase as
1051       select unique snapshot, country_region, confirmed_this_day
1052       from confirmed_increase
1053       having snapshot=max(snapshot);
NOTE: The query requires remerging summary statistics back with the original data.
NOTE: Table WORK.LATEST_INCREASE created, with 191 rows and 3 columns.

1054       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1054     !       run;
1055       
1056       
1057       /* ----------------------------------------------------------------------- */
1058       
1059       
1060       goptions device=png;
1061       goptions border;
1062       
1063       ODS LISTING CLOSE;
1064       ODS html path=odsout body="&name..htm"
1065        (title="COVID-19 Coronavirus Dashboard")
1066        style=htmlblue;
NOTE: Writing HTML Body file: coronavirus_covid19_dashboard.htm
1067       
1068       goptions gunit=pct ftitle='albany amt/bold' ftext='albany amt' htitle=28pt htext=12pt;
1069       goptions cback=black ctext=graycc;
1070       
1071       /* Create the individual graphs, but don't display them (yet) */
1072       goptions nodisplay;
1073       
1074       /*-------------------------------------------------------------------*/
1075       
1076       goptions xpixels=1400 ypixels=700;
1077       data anno_black_background;
1078       length function $8 color $12 style $35;
1079       xsys='3'; ysys='3'; when='b';
1080       function='move'; x=0; y=0; output;
1081       function='bar'; x=100; y=100; style='solid'; color="black"; output;
1082       run;

NOTE: The data set WORK.ANNO_BLACK_BACKGROUND has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1083       
1084       /* this is the medium graph background used behind each graph */
1085       data anno_gray_background; set anno_black_background;
1086       color="gray22";
1087       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_BLACK_BACKGROUND.
NOTE: The data set WORK.ANNO_GRAY_BACKGROUND has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1088       
1089       /* this is the dark/black background, behind the entire dashboard */
1090       proc gslide anno=anno_black_background
WARNING: The SAS/GRAPH product with which GSLIDE is associated will be expiring soon, and is currently in warning mode 
         to indicate this upcoming expiration. Please run PROC SETINIT to obtain more information on your warning period.
1091        des='' name='back';
1092       run;

1093       
1094       title;
1095       
1096       
1097       /*-----------------------------title--------------------------------------*/
18                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1098       
1099       /* Use annotate & gslide to create a long/skinny title slide */
1100       
1101       /* xpixels=(99.5-.5)/100*1400 ypixels=(99-90)/100*700 */
1102       goptions xpixels=1386 ypixels=63;

NOTE: There were 2 observations read from the data set WORK.ANNO_BLACK_BACKGROUND.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.34 seconds
      cpu time            0.10 seconds
      

1103       data anno_title;
1104       length function $8 color $12 style $35 text $300 html $300;
1105       xsys='3'; ysys='3'; when='a'; hsys='d';
1106       function='label'; position='6'; color="graycc";
1107       html='title='||quote("COVID-19 Coronavirus dashboard - &datestr snapshot");
1108       size=20; x=2; y=60; text="COVID-19 Coronavirus Global Cases"; output;
1109       size=14; x=44; y=53; text="&datestr snapshot"; output;
1110       run;

NOTE: Variable style is uninitialized.
NOTE: The data set WORK.ANNO_TITLE has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1111       data anno_title; set anno_gray_background anno_title;
1112       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 2 observations read from the data set WORK.ANNO_TITLE.
NOTE: The data set WORK.ANNO_TITLE has 4 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1113       proc gslide anno=anno_title des='' name='title';
1114       run;

1115       
1116       
1117       /*-----------------------------info--------------------------------------*/
1118       
1119       /* Use annotated text in a gslide to create the info box in bottom/right corner */
1120       
1121       /* xpixels=(99.5-70)/100*1400 ypixels=(15-1)/100*700 */
1122       goptions xpixels=413 ypixels=98;

NOTE: There were 4 observations read from the data set WORK.ANNO_TITLE.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

1123       data anno_info;
1124       length function $8 color $12 style $35 text $300 html $300;
1125       xsys='3'; ysys='3'; when='a'; hsys='d';
1126       function='label'; position='6';
1127       size=11;
1128       
1129       y=87; html=''; function='label';
1130       x=3; color="graycc"; style="albany amt"; text="Visualization by: "; output;
1131       html='target="cor2"
1131     ! href='||quote('https://blogs.sas.com/content/graphicallyspeaking/2020/02/03/improving-the-wuhan-coronavirus-da
1131     ! shboard/');
1132       x=30; color="dodgerblue"; style="albany amt/bold"; text="Robert Allison using SAS Software"; output;
1133       
1134       y=y-24; html='';
1135       x=3; color="graycc"; style="albany amt"; text="Designed after: "; output;
1136       html='target="cor2"
1136     ! href='||quote('https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ec
1136     ! f6');
1137       x=29; color="dodgerblue"; style="albany amt/bold"; text="Johns Hopkins dashboard"; output;
1138       
1139       y=y-24; html='';
1140       x=3; color="graycc"; style="albany amt"; text="Data sources: "; output;
1141       html='target="cor2"
1141     ! href='||quote('https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports');
1142       x=28; color="dodgerblue"; style="albany amt/bold"; text="WHO,"; output;
19                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1143       html='target="cor2" href='||quote('https://www.cdc.gov/coronavirus/2019-ncov/index.html');
1144       x=x+11; color="dodgerblue"; text="CDC,"; output;
1145       html='target="cor2" href='||quote('https://www.ecdc.europa.eu/en/geographical-distribution-2019-ncov-cases');
1146       x=x+10; color="dodgerblue"; text="ECDC,"; output;
1147       html='target="cor2" href='||quote('http://www.nhc.gov.cn/yjb/s3578/new_list.shtml');
1148       x=x+13; color="dodgerblue"; text="NHC,"; output;
1149       html='target="cor2"
1149     ! href='||quote('https://3g.dxy.cn/newh5/view/pneumonia?scene=2&clicktime=1579582238&enterid=1579582238&from=sin
1149     ! glemessage&isappinstalled=0');
1150       x=x+10; color="dodgerblue"; text="and DXY"; output;
1151       
1152       y=y-24; html='';
1153       x=3; color="graycc"; style="albany amt"; text="Data: "; output;
1154       html='target="cor2"
1154     ! href='||quote('https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_se
1154     ! ries');
1155       x=14; color="dodgerblue"; style="albany amt/bold"; text="GitHub"; output;
1156       
1157       run;

NOTE: The data set WORK.ANNO_INFO has 12 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1158       data anno_info; set anno_gray_background anno_info;
1159       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 12 observations read from the data set WORK.ANNO_INFO.
NOTE: The data set WORK.ANNO_INFO has 14 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1160       proc gslide anno=anno_info des='' name='info';
1161       run;

1162       
1163       
1164       /*----------------------------confsum---------------------------------------*/
1165       
1166       /* this is the grand sum (large number) over the confirmed table */
1167       
1168       /* xpixels=(15-.5)/100*1400  ypixels=(89-75)/100*700 */
1169       goptions xpixels=203 ypixels=98;
1170       

NOTE: There were 14 observations read from the data set WORK.ANNO_INFO.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
      

1171       proc sql noprint;
1172       create table anno_confirmed_total as
1173       select sum(confirmed) as sum_confirmed from latest_confirmed;
NOTE: Table WORK.ANNO_CONFIRMED_TOTAL created, with 1 rows and 1 columns.

1174       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1174     !       run;
1175       data anno_confirmed_total; set anno_confirmed_total;
1176       length function $8 color $12 style $35 text $300 html $300;
1177       xsys='3'; ysys='3'; when='a'; hsys='d';
1178       function='label'; position='5';
1179       style='albany amt/bold'; color="graycc"; size=11;
1180       x=50; y=84; text="Total Confirmed"; output;
1181       html='title='||quote(trim(left(put(sum_confirmed,comma12.0)))||" total confirmed cases of COVID-19 Coronavirus
1181     !  worldwide");
1182       style='albany amt/bold'; color="red"; size=31;
1183       x=50; y=50; text=trim(left(put(sum_confirmed,comma12.0))); output;
1184       run;

NOTE: There were 1 observations read from the data set WORK.ANNO_CONFIRMED_TOTAL.
NOTE: The data set WORK.ANNO_CONFIRMED_TOTAL has 2 observations and 14 variables.
20                                                   The SAS System                         07:20 Tuesday, April 14, 2020

NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

1185       data anno_confirmed_total; set anno_gray_background anno_confirmed_total;
1186       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 2 observations read from the data set WORK.ANNO_CONFIRMED_TOTAL.
NOTE: The data set WORK.ANNO_CONFIRMED_TOTAL has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187       proc gslide anno=anno_confirmed_total des='' name='confsum';
1188       run;

1189       
1190       /*------------------------------deadsum-------------------------------------*/
1191       
1192       /* this is the grand sum (large number) over the deaths table */
1193       
1194       goptions xpixels=203 ypixels=98;

NOTE: There were 4 observations read from the data set WORK.ANNO_CONFIRMED_TOTAL.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
      

1195       proc sql noprint;
1196       create table anno_deaths_total as
1197       select sum(deaths) as sum_deaths from latest_deaths;
NOTE: Table WORK.ANNO_DEATHS_TOTAL created, with 1 rows and 1 columns.

1198       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1198     !       run;
1199       data anno_deaths_total; set anno_deaths_total;
1200       length function $8 color $12 style $35 text $300 html $300;
1201       xsys='3'; ysys='3'; when='a'; hsys='d';
1202       function='label'; position='5';
1203       style='albany amt/bold'; color="graycc"; size=11;
1204       x=50; y=84; text="Total Deaths"; output;
1205       html='title='||quote(trim(left(put(sum_deaths,comma12.0)))||" deaths from COVID-19 Coronavirus worldwide");
1206       style='albany amt/bold'; color="white"; size=40;
1207       x=50; y=50; text=trim(left(put(sum_deaths,comma12.0))); output;
1208       run;

NOTE: There were 1 observations read from the data set WORK.ANNO_DEATHS_TOTAL.
NOTE: The data set WORK.ANNO_DEATHS_TOTAL has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209       data anno_deaths_total; set anno_gray_background anno_deaths_total;
1210       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 2 observations read from the data set WORK.ANNO_DEATHS_TOTAL.
NOTE: The data set WORK.ANNO_DEATHS_TOTAL has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1211       proc gslide anno=anno_deaths_total des='' name='deadsum';
1212       run;

1213       
1214       
1215       /*------------------------------recosum-------------------------------------*/
1216       
1217       /* this is the grand sum (large number) over the recovered table */
1218       
21                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1219       goptions xpixels=203 ypixels=98;

NOTE: There were 4 observations read from the data set WORK.ANNO_DEATHS_TOTAL.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
      

1220       proc sql noprint;
1221       create table anno_recovered_total as
1222       select sum(recovered) as sum_recovered from latest_recovered;
NOTE: Table WORK.ANNO_RECOVERED_TOTAL created, with 1 rows and 1 columns.

1223       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1223     !       run;
1224       data anno_recovered_total; set anno_recovered_total;
1225       length function $8 color $12 style $35 text $300 html $300;
1226       xsys='3'; ysys='3'; when='a'; hsys='d';
1227       function='label'; position='5';
1228       style='albany amt/bold'; color="graycc"; size=11;
1229       x=50; y=84; text="Total Recovered"; output;
1230       html='title='||quote(trim(left(put(sum_recovered,comma12.0)))||" recovered from COVID-19 Coronavirus
1230     ! worldwide");
1231       style='albany amt/bold'; color="cx71a81e"; size=40;
1232       x=50; y=50; text=trim(left(put(sum_recovered,comma12.0))); output;
1233       run;

NOTE: There were 1 observations read from the data set WORK.ANNO_RECOVERED_TOTAL.
NOTE: The data set WORK.ANNO_RECOVERED_TOTAL has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1234       data anno_recovered_total; set anno_gray_background anno_recovered_total;
1235       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 2 observations read from the data set WORK.ANNO_RECOVERED_TOTAL.
NOTE: The data set WORK.ANNO_RECOVERED_TOTAL has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1236       proc gslide anno=anno_recovered_total des='' name='recosum';
1237       run;

1238       
1239       /*------------------------------incsum-------------------------------------*/
1240       
1241       goptions xpixels=203 ypixels=98;

NOTE: There were 4 observations read from the data set WORK.ANNO_RECOVERED_TOTAL.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds
      

1242       proc sql noprint;
1243       create table anno_increase_total as
1244       select sum(confirmed_this_day) as sum_increase from latest_increase;
NOTE: Table WORK.ANNO_INCREASE_TOTAL created, with 1 rows and 1 columns.

1245       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1245     !       run;
1246       data anno_increase_total; set anno_increase_total;
1247       length function $8 color $12 style $35 text $300 html $300;
1248       xsys='3'; ysys='3'; when='a'; hsys='d';
1249       function='label'; position='5';
1250       style='albany amt/bold'; color="graycc"; size=11;
1251       x=50; y=84; text="New Cases Today"; output;
22                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1252       html='title='||quote(trim(left(put(sum_increase,comma12.0)))||" increase in COVID-19 Coronavirus cases
1252     ! worldwide on &datestr");
1253       style='albany amt/bold'; color="orange"; size=40;
1254       x=50; y=50; text=trim(left(put(sum_increase,comma12.0))); output;
1255       run;

NOTE: There were 1 observations read from the data set WORK.ANNO_INCREASE_TOTAL.
NOTE: The data set WORK.ANNO_INCREASE_TOTAL has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1256       data anno_increase_total; set anno_gray_background anno_increase_total;
1257       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 2 observations read from the data set WORK.ANNO_INCREASE_TOTAL.
NOTE: The data set WORK.ANNO_INCREASE_TOTAL has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1258       proc gslide anno=anno_increase_total des='' name='incsum';
1259       run;

1260       
1261       
1262       
1263       /*----------------------------map---------------------------------------*/
1264       
1265       /* World map, with annotated red bubbles */
1266       
1267       /* xpixels=(69.5-15.5)/100*1400  ypixels=(89-35)/100*700 */
1268       goptions xpixels=756 ypixels=378;
1269       

NOTE: There were 4 observations read from the data set WORK.ANNO_INCREASE_TOTAL.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

1270       proc sql noprint;
1271       create table map_data as
1272       select unique country_region, avg(lat) as lat, avg(long) as long, sum(confirmed) as confirmed
1273       from latest_confirmed
1274       group by country_region;
NOTE: Table WORK.MAP_DATA created, with 191 rows and 4 columns.

1275       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1275     !       run;
1276       
1277       data map_data; set map_data;
1278       /* if the average lat/long doesn't land in a good position, hard-code one */
1279       if country_region='Canada' then do;
1280        lat=52.7765273; long=-107.4818132;
1281        end;
1282       if country_region='Sweden' then do;
1283        lat=63.7425748; long=16.5564647;
1284        end;
1285       if country_region='Russia' then do;
1286        lat=55.4645521; long=37.3415677;
1287        end;
1288       if country_region='United Kingdom' then do;
1289        lat=53.7970459; long=-1.5191599;
1290        end;
1291       if country_region='France' then do;
1292        lat=48.8283932; long=2.3443639;
1293        end;
1294       if country_region='Mauritania' then do;
1295        lat=19.5488367; long=-10.3433656;
1296        end;
1297       /* https://github.com/CSSEGISandData/COVID-19/issues/836 */
1298       if country_region='Congo (Brazzaville)' then do;
1299        lat=-0.7134667; long=15.7399857;
23                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1300        end;
1301       length html $300;
1302       html=
1303        'title='||quote(
1304         trim(left(country_region))||'0d'x||
1305         trim(left(put(confirmed,comma12.0)))||' confirmed cases')||
1306        ' href='||quote('#'||trim(left(country_region)));
1307       run;

NOTE: There were 191 observations read from the data set WORK.MAP_DATA.
NOTE: The data set WORK.MAP_DATA has 191 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1308       
1309       /* The country names have to match in the data & map, for the choro map */
1310       /* So, let's make our SAS map names match the names in the data. */
1311       data my_map; set mapsgfk.world (where=((density<=2 or
1312        idname in ('Vatican City State' 'Gibraltar' 'San Marino' 'Monaco'))
1313        and idname^='Antarctica') drop=resolution);
NOTE: The map data sets in library MAPSGFK are based on the digital maps from GfK GeoMarketing and are covered by their 
      Copyright. For additional information, see http://support.sas.com/mapsonline/gfklicense.
1314       length country_region $100;
1315       country_region=idname;
1316       if idname='China/Taiwan_POC' then country_region='Taiwan*';
1317       if idname='United States' then country_region='US';
1318       if idname='Bolivia, Plurinational State of' then country_region='Bolivia';
1319       if idname='Russian Federation' then country_region='Russia';
1320       if idname='Viet Nam' then country_region='Vietnam';
1321       if idname='United Arab Emirates' then country_region='UAE';
1322       if idname='Macedonia' then country_region='North Macedonia';
1323       if idname='Brunei Darussalam' then country_region='Brunei';
1324       if idname='Vatican City State' then country_region='Holy See';
1325       if idname='South Korea' then country_region='Korea, South';
1326       if idname='Czech Republic' then country_region='Czechia';
1327       if idname='Ivory Coast' then country_region="Cote d'Ivoire";
1328       if idname='Swaziland' then country_region='Eswatini';
1329       if idname='Venezuela, Bolivarian Republic of' then country_region='Venezuela';
1330       if idname='Bailiwick of Jersey' then country_region='Jersey';
1331       if idname='Bailiwick of Guernsey' then country_region='Guernsey';
1332       if idname='Myanmar' then country_region='Burma';
1333       /*
1334       if idname='Bahamas' then country_region='The Bahamas';
1335       if idname='Bahamas' then country_region='Bahamas, The';
1336       */
1337       if idname='Tanzania, United Republic of' then country_region='Tanzania';
1338       if idname='Democratic Republic of Congo' then country_region='Congo (Kinshasa)';
1339       if idname='Congo' then country_region='Congo (Brazzaville)';
1340       /*
1341       if idname='Gambia' then country_region='Gambia, The';
1342       if idname='Congo' then country_region='Republic of the Congo';
1343       */
1344       run;

NOTE: There were 44075 observations read from the data set MAPSGFK.WORLD.
      WHERE ((density<=2) or idname in ('Gibraltar', 'Monaco', 'San Marino', 'Vatican City State')) and (idname not = 
      'Antarctica');
NOTE: The data set WORK.MY_MAP has 44075 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

1345       /*
1346       if idname='China/Taiwan_POC' then country_region='Taiwan';
1347       if idname='Moldova' then country_region='Republic of Moldova';
1348       if idname='China' then country_region='Mainland China';
1349       if idname='United Kingdom' then country_region='UK';
1350       if idname='South Korea' then country_region='Republic of Korea';
1351       */
1352       
1353       /*
1354       Some code to help find the matches...
1355       proc print data=mapsgfk.world (where=(index(idname,'Vatican')^=0)); run;
1356       */
1357       proc gproject data=my_map out=my_map latlong eastlong degrees
1358        project=miller2 parmout=projparm;
1359       id country_region;
1360       run;

24                                                   The SAS System                         07:20 Tuesday, April 14, 2020

NOTE: The MILLER2 projection is experimental.
NOTE: POLELAT = 12.255794.
NOTE: POLELONG = 0.000411.
NOTE: The data set WORK.PROJPARM has 1 observations and 9 variables.
NOTE: There were 44075 observations read from the data set WORK.MY_MAP.
NOTE: The data set WORK.MY_MAP has 44075 observations and 13 variables.
NOTE: PROCEDURE GPROJECT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

1361       /* Project the bubble lat/longs the same way you did the map */
1362       proc gproject data=map_data out=map_data latlong eastlong degrees
1363        parmin=projparm parmentry=my_map;
1364       id;
1365       run;

NOTE: Using default parameters for entry MY_MAP from data set WORK.PROJPARM. Use NOPARMIN option to disable this feature.
NOTE: POLELAT = 12.255794.
NOTE: POLELONG = 0.000411.
NOTE: There were 191 observations read from the data set WORK.MAP_DATA.
NOTE: The data set WORK.MAP_DATA has 191 observations and 7 variables.
NOTE: PROCEDURE GPROJECT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1366       
1367       /* these control the size of the blue bubbles */
1368       %let max_val=500000;  /* maximum number of confirmed cases (will correspond to maximum bubble size) */
1369       %let max_area=80; /* maximum bubble size (area) */
1370       proc sort data=map_data out=anno_bubbles;
1371       by descending confirmed;
1372       run;

NOTE: There were 191 observations read from the data set WORK.MAP_DATA.
NOTE: The data set WORK.ANNO_BUBBLES has 191 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1373       data anno_bubbles; set anno_bubbles;
1374       length function $8 color $12 style $35 text $300 html $300;
1375       xsys='2'; ysys='2'; hsys='3'; when='a';
1376       function='pie'; rotate=360; style='psolid'; color="red";
1377       size=.3+sqrt((confirmed/&max_val)*&max_area/3.14);
1378       output;
1379       /* gray outline around bubbles (especially important for overlapping bubbles */
1380       size=size+.1;
1381       style='pempty';
1382       color='gray77';
1383       html='';
1384       output;
1385       run;

NOTE: Variable text is uninitialized.
NOTE: There were 191 observations read from the data set WORK.ANNO_BUBBLES.
NOTE: The data set WORK.ANNO_BUBBLES has 382 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1386       
1387       data anno_bubbles; set anno_gray_background anno_bubbles;
1388       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 382 observations read from the data set WORK.ANNO_BUBBLES.
NOTE: The data set WORK.ANNO_BUBBLES has 384 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1389       pattern1 v=s c=gray99;
1390       proc gmap data=map_data map=my_map all anno=anno_bubbles;
1391       id country_region;
1392       choro confirmed / levels=1 nolegend
1393        cdefault=gray55 coutline=gray77
1394        html=html
25                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1395        des='' name='map';
1396       run;

WARNING: ID variable Country_Region is of length 32 in response data set and length 100 in map data set.  This might 
         result in ID values not matching or multiple regions to be combined.

NOTE: There were 44075 observations read from the data set WORK.MY_MAP.
NOTE: There were 384 observations read from the data set WORK.ANNO_BUBBLES.
NOTE: PROCEDURE GMAP used (Total process time):
      real time           0.15 seconds
      cpu time            0.09 seconds
      

1397       proc sql noprint;
1398       create table not_in_map as
1399       select unique country_region
1400       from map_data
1401       where country_region not in (select unique country_region from my_map);
NOTE: Table WORK.NOT_IN_MAP created, with 5 rows and 1 columns.

1402       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds
      

1402     !       run;
1403       
1404       
1405       /*--------------------------conftab-----------------------------------------*/
1406       
1407       /* confirmed table */
1408       
1409       /* xpixels=(15-.5)/100*1400 ypixels=(74-1)/100*700 */
1410       goptions xpixels=203 ypixels=511;
1411       proc sql noprint;
1412       create table anno_table_confirmed as
1413       select unique country_region, sum(confirmed) as confirmed
1414       from latest_confirmed
1415       group by country_region;
NOTE: Table WORK.ANNO_TABLE_CONFIRMED created, with 191 rows and 2 columns.

1416       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1416     !       run;
1417       proc sort data=anno_table_confirmed out=anno_table_confirmed;
1418       by descending confirmed country_region;
1419       run;

NOTE: There were 191 observations read from the data set WORK.ANNO_TABLE_CONFIRMED.
NOTE: The data set WORK.ANNO_TABLE_CONFIRMED has 191 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1420       data anno_table_confirmed; set anno_table_confirmed (obs=16);
1421       if country_region='United Arab Emirates' then country_region='UAE';
1422       if country_region='Iran (Islamic Republic of)' then country_region='Iran';
1423       run;

NOTE: There were 16 observations read from the data set WORK.ANNO_TABLE_CONFIRMED.
NOTE: The data set WORK.ANNO_TABLE_CONFIRMED has 16 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1424       data anno_table_confirmed; set anno_table_confirmed;
1425       length function $8 color $12 style $35 text $300 html $300;
1426       xsys='3'; ysys='3'; when='a'; hsys='d';
1427       function='label'; style='albany amt/bold'; size=11;
1428       y=99-(_n_*6);
1429       text=trim(left(put(confirmed,comma12.0))); x=28; position='4'; color="red"; output;
1430       text=trim(left(country_region)); x=x+5; position='6'; color="graycc"; output;
1431       /* annotate an invisible box, for the html= mouse-over text */
1432       html='title='||quote(trim(left(put(confirmed,comma12.0)))||" confirmed cases of COVID-19 Coronavirus in
1432     ! "||trim(left(country_region)))||
26                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1433        ' href='||quote('#'||trim(left(country_region)));
1434       function='move'; x=0; y=y-3; output;
1435       function='bar'; x=100; y=y+5; style='empty'; line=3; size=.001; color="pink"; output;
1436       run;

NOTE: There were 16 observations read from the data set WORK.ANNO_TABLE_CONFIRMED.
NOTE: The data set WORK.ANNO_TABLE_CONFIRMED has 64 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1437       data anno_table_confirmed; set anno_table_confirmed;
1438       output;
1439       if _n_=1 then do;
1440        style='albany amt'; color="graycc"; text='- top 16 -'; x=50; y=y+5;  position='5'; output;
1441        end;
1442       run;

NOTE: There were 64 observations read from the data set WORK.ANNO_TABLE_CONFIRMED.
NOTE: The data set WORK.ANNO_TABLE_CONFIRMED has 65 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1443       data anno_table_confirmed; set anno_gray_background anno_table_confirmed;
1444       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 65 observations read from the data set WORK.ANNO_TABLE_CONFIRMED.
NOTE: The data set WORK.ANNO_TABLE_CONFIRMED has 67 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1445       proc gslide anno=anno_table_confirmed des='' name='conftab';
1446       run;

NOTE: ERROR DETECTED IN ANNOTATE= DATASET WORK.ANNO_TABLE_CONFIRMED.
NOTE: PROBLEM IN OBSERVATION     6 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    10 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    14 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    18 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    22 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    26 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    30 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    34 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    38 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    42 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    46 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    50 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    54 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    58 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    62 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    66 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
1447       
1448       
1449       /*---------------------------deadtab----------------------------------------*/
1450       
1451       /* dead table */
1452       
1453       /* xpixels=(84.5-70)/100*1400 ypixels=(74-16)/100*700 */
1454       goptions xpixels=203 ypixels=406;

27                                                   The SAS System                         07:20 Tuesday, April 14, 2020

NOTE: There were 67 observations read from the data set WORK.ANNO_TABLE_CONFIRMED.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.13 seconds
      cpu time            0.09 seconds
      

1455       proc sql noprint;
1456       create table anno_table_deaths as
1457       select unique country_region, sum(deaths) as deaths
1458       from latest_deaths
1459       group by country_region;
NOTE: Table WORK.ANNO_TABLE_DEATHS created, with 191 rows and 2 columns.

1460       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1460     !       run;
1461       proc sort data=anno_table_deaths out=anno_table_deaths;
1462       by descending deaths country_region;
1463       run;

NOTE: There were 191 observations read from the data set WORK.ANNO_TABLE_DEATHS.
NOTE: The data set WORK.ANNO_TABLE_DEATHS has 191 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1464       data anno_table_deaths; set anno_table_deaths (where=(deaths>0));
1465       run;

NOTE: There were 153 observations read from the data set WORK.ANNO_TABLE_DEATHS.
      WHERE deaths>0;
NOTE: The data set WORK.ANNO_TABLE_DEATHS has 153 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1466       data anno_table_deaths; set anno_table_deaths (obs=13);
1467       if country_region='United Arab Emirates' then country_region='UAE';
1468       if country_region='Iran (Islamic Republic of)' then country_region='Iran';
1469       run;

NOTE: There were 13 observations read from the data set WORK.ANNO_TABLE_DEATHS.
NOTE: The data set WORK.ANNO_TABLE_DEATHS has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1470       data anno_table_deaths; set anno_table_deaths;
1471       length function $8 color $12 style $35 text $300 html $300;
1472       xsys='3'; ysys='3'; when='a'; hsys='d';
1473       function='label'; style='albany amt/bold'; size=11;
1474       y=98-(_n_*7);
1475       text=trim(left(put(deaths,comma12.0))); x=28; position='4'; color="white"; output;
1476       text=trim(left(country_region)); x=x+5; position='6'; color="graycc"; output;
1477       /* annotate an invisible box, for the html= mouse-over text */
1478       html='title='||quote(trim(left(put(deaths,comma12.0)))||" deaths from COVID-19 Coronavirus in
1478     ! "||trim(left(country_region)))||
1479        ' href='||quote('#'||trim(left(country_region)));
1480       function='move'; x=0; y=y-3; output;
1481       function='bar'; x=100; y=y+5; style='empty'; line=3; size=.001; color="pink"; output;
1482       run;

NOTE: There were 13 observations read from the data set WORK.ANNO_TABLE_DEATHS.
NOTE: The data set WORK.ANNO_TABLE_DEATHS has 52 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1483       data anno_table_deaths; set anno_table_deaths;
1484       output;
1485       if _n_=1 then do;
1486        style='albany amt'; color="graycc"; text='- top 13 -'; x=50; y=y+6;  position='5'; output;
1487        end;
1488       run;
28                                                   The SAS System                         07:20 Tuesday, April 14, 2020


NOTE: There were 52 observations read from the data set WORK.ANNO_TABLE_DEATHS.
NOTE: The data set WORK.ANNO_TABLE_DEATHS has 53 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1489       data anno_table_deaths; set anno_gray_background anno_table_deaths;
1490       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 53 observations read from the data set WORK.ANNO_TABLE_DEATHS.
NOTE: The data set WORK.ANNO_TABLE_DEATHS has 55 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1491       proc gslide anno=anno_table_deaths des='' name='deadtab';
1492       run;

NOTE: ERROR DETECTED IN ANNOTATE= DATASET WORK.ANNO_TABLE_DEATHS.
NOTE: PROBLEM IN OBSERVATION     6 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    10 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    14 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    18 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    22 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    26 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    30 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    34 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    38 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    42 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    46 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    50 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    54 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
1493       
1494       
1495       /*---------------------------inctab----------------------------------------*/
1496       
1497       /* daily increase table */
1498       
1499       goptions xpixels=203 ypixels=406;

NOTE: There were 55 observations read from the data set WORK.ANNO_TABLE_DEATHS.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds
      

1500       proc sort data=latest_increase out=anno_table_increase;
1501       by descending confirmed_this_day country_region;
1502       run;

NOTE: There were 191 observations read from the data set WORK.LATEST_INCREASE.
NOTE: The data set WORK.ANNO_TABLE_INCREASE has 191 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1503       data anno_table_increase; set anno_table_increase (where=(confirmed_this_day>0));
1504       run;

NOTE: There were 135 observations read from the data set WORK.ANNO_TABLE_INCREASE.
      WHERE confirmed_this_day>0;
NOTE: The data set WORK.ANNO_TABLE_INCREASE has 135 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
29                                                   The SAS System                         07:20 Tuesday, April 14, 2020

      cpu time            0.00 seconds
      

1505       data anno_table_increase; set anno_table_increase (obs=13);
1506       if country_region='United Arab Emirates' then country_region='UAE';
1507       if country_region='Iran (Islamic Republic of)' then country_region='Iran';
1508       run;

NOTE: There were 13 observations read from the data set WORK.ANNO_TABLE_INCREASE.
NOTE: The data set WORK.ANNO_TABLE_INCREASE has 13 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1509       
1510       data anno_table_increase; set anno_table_increase;
1511       length function $8 color $12 style $35 text $300 html $300;
1512       xsys='3'; ysys='3'; when='a'; hsys='d';
1513       function='label'; style='albany amt/bold'; size=11;
1514       y=98-(_n_*7);
1515       /* green was cx71a81e */
1516       text=trim(left(put(confirmed_this_day,comma12.0))); x=28; position='4'; color="orange"; output;
1517       text=trim(left(country_region)); x=x+5; position='6'; color="graycc"; output;
1518       /* annotate an invisible box, for the html= mouse-over text */
1519       html='title='||quote(trim(left(put(confirmed_this_day,comma12.0)))||
1520        " increase in COVID-19 Coronavirus in "||trim(left(country_region))||' on
1520     ! '||trim(left(put(snapshot,nldate20.))))||
1521        ' href='||quote('#'||trim(left(country_region)));
1522       function='move'; x=0; y=y-3; output;
1523       function='bar'; x=100; y=y+5; style='empty'; line=3; size=.001; color="pink"; output;
1524       run;

NOTE: There were 13 observations read from the data set WORK.ANNO_TABLE_INCREASE.
NOTE: The data set WORK.ANNO_TABLE_INCREASE has 52 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1525       data anno_table_increase; set anno_table_increase;
1526       output;
1527       if _n_=1 then do;
1528        style='albany amt'; color="graycc"; text='- top 13 -'; x=50; y=y+6;  position='5'; output;
1529        end;
1530       run;

NOTE: There were 52 observations read from the data set WORK.ANNO_TABLE_INCREASE.
NOTE: The data set WORK.ANNO_TABLE_INCREASE has 53 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1531       data anno_table_increase; set anno_gray_background anno_table_increase;
1532       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 53 observations read from the data set WORK.ANNO_TABLE_INCREASE.
NOTE: The data set WORK.ANNO_TABLE_INCREASE has 55 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1533       proc gslide anno=anno_table_increase des='' name='incrtab';
1534       run;

NOTE: ERROR DETECTED IN ANNOTATE= DATASET WORK.ANNO_TABLE_INCREASE.
NOTE: PROBLEM IN OBSERVATION     6 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    10 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    14 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    18 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    22 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    26 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    30 -
30                                                   The SAS System                         07:20 Tuesday, April 14, 2020

      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    34 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    38 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    42 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    46 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    50 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    54 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
1535       
1536       
1537       
1538       /*---------------------------recotab----------------------------------------*/
1539       
1540       /* recovered table */
1541       
1542       goptions xpixels=203 ypixels=406;

NOTE: There were 55 observations read from the data set WORK.ANNO_TABLE_INCREASE.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds
      

1543       proc sql noprint;
1544       create table anno_table_recovered as
1545       select unique country_region, sum(recovered) as recovered
1546       from latest_recovered
1547       group by country_region;
NOTE: Table WORK.ANNO_TABLE_RECOVERED created, with 191 rows and 2 columns.

1548       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1548     !       run;
1549       proc sort data=anno_table_recovered out=anno_table_recovered;
1550       by descending recovered country_region;
1551       run;

NOTE: There were 191 observations read from the data set WORK.ANNO_TABLE_RECOVERED.
NOTE: The data set WORK.ANNO_TABLE_RECOVERED has 191 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1552       data anno_table_recovered; set anno_table_recovered (where=(recovered>0));
1553       run;

NOTE: There were 168 observations read from the data set WORK.ANNO_TABLE_RECOVERED.
      WHERE recovered>0;
NOTE: The data set WORK.ANNO_TABLE_RECOVERED has 168 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1554       data anno_table_recovered; set anno_table_recovered (obs=13);
1555       if country_region='United Arab Emirates' then country_region='UAE';
1556       if country_region='Iran (Islamic Republic of)' then country_region='Iran';
1557       run;

NOTE: There were 13 observations read from the data set WORK.ANNO_TABLE_RECOVERED.
NOTE: The data set WORK.ANNO_TABLE_RECOVERED has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1558       data anno_table_recovered; set anno_table_recovered;
1559       length function $8 color $12 style $35 text $300 html $300;
1560       xsys='3'; ysys='3'; when='a'; hsys='d';
1561       function='label'; style='albany amt/bold'; size=11;
1562       y=98-(_n_*7);
1563       text=trim(left(put(recovered,comma12.0))); x=28; position='4'; color="cx71a81e"; output;
31                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1564       text=trim(left(country_region)); x=x+5; position='6'; color="graycc"; output;
1565       /* annotate an invisible box, for the html= mouse-over text */
1566       html='title='||quote(trim(left(put(recovered,comma12.0)))||" recovered from COVID-19 Coronavirus in
1566     ! "||trim(left(country_region)))||
1567        ' href='||quote('#'||trim(left(country_region)));
1568       function='move'; x=0; y=y-3; output;
1569       function='bar'; x=100; y=y+5; style='empty'; line=3; size=.001; color="pink"; output;
1570       run;

NOTE: There were 13 observations read from the data set WORK.ANNO_TABLE_RECOVERED.
NOTE: The data set WORK.ANNO_TABLE_RECOVERED has 52 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1571       data anno_table_recovered; set anno_table_recovered;
1572       output;
1573       if _n_=1 then do;
1574       /*
1575        style='albany amt'; color="graycc"; text='- top 13 -'; x=50; y=y+6;  position='5'; output;
1576       */
1577        style='albany amt'; color="graycc"; text='- data ended March 22 -'; x=50; y=y+6;  position='5'; output;
1578        end;
1579       run;

NOTE: There were 52 observations read from the data set WORK.ANNO_TABLE_RECOVERED.
NOTE: The data set WORK.ANNO_TABLE_RECOVERED has 53 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1580       data anno_table_recovered; set anno_gray_background anno_table_recovered;
1581       run;

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: There were 53 observations read from the data set WORK.ANNO_TABLE_RECOVERED.
NOTE: The data set WORK.ANNO_TABLE_RECOVERED has 55 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1582       proc gslide anno=anno_table_recovered des='' name='recotab';
1583       run;

NOTE: ERROR DETECTED IN ANNOTATE= DATASET WORK.ANNO_TABLE_RECOVERED.
NOTE: PROBLEM IN OBSERVATION     6 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    10 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    14 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    18 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    22 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    26 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    30 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    34 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    38 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    42 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    46 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    50 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
NOTE: PROBLEM IN OBSERVATION    54 -
      HSYS="D" is valid only for text functions. HSYS changed to '4'.
1584       
1585       
1586       /*---------------------------series----------------------------------------*/
1587       
1588       /* time series graph */
1589       
1590       /* xpixels=(69.5-15.5)/100*1400 ypixels=(34-1)/100*700 */
1591       goptions xpixels=756 ypixels=231;
32                                                   The SAS System                         07:20 Tuesday, April 14, 2020


NOTE: There were 55 observations read from the data set WORK.ANNO_TABLE_RECOVERED.
NOTE: PROCEDURE GSLIDE used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
      

1592       proc sql noprint;
1593       create table summarized_series as
1594       select unique snapshot, sum(confirmed) as confirmed
1595       from confirmed_data
1596       group by snapshot
1597       order by snapshot;
NOTE: Table WORK.SUMMARIZED_SERIES created, with 83 rows and 2 columns.

1598       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1598     !       run;
1599       data summarized_series; set summarized_series;
1600       length html $300;
1601       html='title='||quote(
1602        trim(left(put(snapshot,weekdate30.)))||'0d'x||
1603        trim(left(put(confirmed,comma12.0)))||' confirmed cases'
1604        );
1605       run;

NOTE: There were 83 observations read from the data set WORK.SUMMARIZED_SERIES.
NOTE: The data set WORK.SUMMARIZED_SERIES has 83 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1606       /*
1607       There seems to be a bug in gplot mouseover text, when used in greplay in this way.
1608       Therefore I'm annotating 'invisible' circles around the gplot markers,
1609       with the html mouse-over on the annotated circles.
1610       */
1611       data anno_mouseover; set summarized_series;
1612       length function $8 color $12 style $35;
1613       xsys='2'; ysys='2'; hsys='3'; when='b';
1614       x=snapshot; y=confirmed;
1615       function='pie'; style='pempty'; size=3; rotate=360; color='gray22';
1616       html=trim(left(html))||' href='||quote('#newbar');
1617       run;

NOTE: There were 83 observations read from the data set WORK.SUMMARIZED_SERIES.
NOTE: The data set WORK.ANNO_MOUSEOVER has 83 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1618       proc sql noprint;
1619       select min(snapshot) format=date9. into :mindate from summarized_series;
1620       select max(snapshot) format=date9. into :maxdate from summarized_series;
1621       select max(snapshot)-min(snapshot) into :byval from summarized_series;
1622       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1622     !       run;
1623       axis1 value=(c=graycc h=11pt) label=none minor=none offset=(0,0);
1624       axis2 label=none order=("&mindate"d to "&maxdate"d by &byval)
1625        major=(height=8pt) value=(c=graycc h=11pt font='albany amt')
1626        offset=(1,2);
1627       legend1 value=(c=graycc font="albany amt/bold" h=11pt) shape=symbol(4pct,4pct)
1628        label=(position=top font="albany amt/bold" h=11pt c=graycc "Total Confirmed Cases")
1629        position=(top left inside) mode=share across=1 repeat=2 offset=(3pct, -8pct);
1630       symbol1 interpol=sm50 height=8pt width=2 color=red value=square;
1631       title1 h=2pct ' ';
1632       footnote1 h=2pct ' ';
1633       data anno_mouseover; set anno_mouseover anno_gray_background;
1634       run;

NOTE: There were 83 observations read from the data set WORK.ANNO_MOUSEOVER.
33                                                   The SAS System                         07:20 Tuesday, April 14, 2020

NOTE: There were 2 observations read from the data set WORK.ANNO_GRAY_BACKGROUND.
NOTE: The data set WORK.ANNO_MOUSEOVER has 85 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1635       proc gplot data=summarized_series anno=anno_mouseover;
1636       format confirmed comma12.0;
1637       format snapshot nldate20.;
1638       note move=(15,77) font='albany amt/bold' "Total Confirmed Cases Worldwide";
1639       plot confirmed*snapshot /
1640        vaxis=axis1 haxis=axis2
1641        des='' name="series";
1642       run;

1643       
1644       
1645       /*-------------------------------------------------------------------*/
1646       
1647       /*
1648       turn on display again, and replay all the individual graphs
1649       into a custom greplay template layout.
1650       */
1651       
1652       goptions display;
1653       
1654       %let border=gray44;
1655       goptions xpixels=1400 ypixels=700;

NOTE: There were 83 observations read from the data set WORK.SUMMARIZED_SERIES.
NOTE: There were 85 observations read from the data set WORK.ANNO_MOUSEOVER.
NOTE: PROCEDURE GPLOT used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds
      

1656       proc greplay nofs igout=work.gseg tc=tempcat;
NOTE: Building list of graphs from the catalog.

NOTE: Enter greplay commands or statements.
1657          tdef dash des='COVID-19 Coronavirus Dashboard'
1658          0/ llx=0       lly=0
1659             ulx=0       uly=100
1660             urx=100     ury=100
1661             lrx=100     lry=0
1662          1/ llx=.5      lly=90
1663             ulx=.5      uly=99
1664             urx=99.5    ury=99
1665             lrx=99.5    lry=90
1666             color=&border
1667          2/ llx=.5      lly=75
1668             ulx=.5      uly=89
1669             urx=15      ury=89
1670             lrx=15      lry=75
1671             color=&border
1672          3/ llx=.5      lly=1
1673             ulx=.5      uly=74
1674             urx=15      ury=74
1675             lrx=15      lry=1
1676             color=&border
1677          4/ llx=70      lly=75
1678             ulx=70      uly=89
1679             urx=84.5    ury=89
1680             lrx=84.5    lry=75
1681             color=&border
1682          5/ llx=70      lly=16
1683             ulx=70      uly=74
1684             urx=84.5    ury=74
1685             lrx=84.5    lry=16
1686             color=&border
1687          6/ llx=85      lly=75
1688             ulx=85      uly=89
1689             urx=99.5    ury=89
1690             lrx=99.5    lry=75
1691             color=&border
1692          7/ llx=85      lly=16
1693             ulx=85      uly=74
1694             urx=99.5    ury=74
1695             lrx=99.5    lry=16
1696             color=&border
1697          8/ llx=15.5    lly=35
34                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1698             ulx=15.5    uly=89
1699             urx=69.5    ury=89
1700             lrx=69.5    lry=35
1701             color=&border
1702          9/ llx=15.5    lly=1
1703             ulx=15.5    uly=34
1704             urx=69.5    ury=34
1705             lrx=69.5    lry=1
1706             color=&border
1707         10/ llx=70      lly=1
1708             ulx=70      uly=15
1709             urx=99.5    ury=15
1710             lrx=99.5    lry=1
1711             color=&border
1712          ;
1713          template dash;
1714          treplay
1715           9:series
1716           0:back
1717           1:title
1718           2:confsum
1719           3:conftab
1720           4:incsum
1721           5:incrtab
1722           6:deadsum
1723           7:deadtab
1724       /*
1725           7:recotab
1726       */
1727           8:map
1728          10:info
1729           des='' name="&name";
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
NOTE: Foreground color BLACK same as background. Part of your graph might not be visible.
NOTE: 167772 bytes written to U:\web\democd103\coronavirus_covid19_dashboard.png.
1730       run;

1731       
1732       /* -------------------------------------------------------------------- */
1733       
1734       ods graphics /
1735        noscale /* if you don't use this option, the text will be resized */
1736        imagemap tipmax=2500
1737        imagefmt=png
1738        width=800px height=600px
1739        noborder;
1740       
1741       /* -------------------------------------------------------------------- */
1742       
1743       /*
1744       Create the bar chart, below the dashboard.
1745       */
1746       

NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.94 seconds
      cpu time            0.64 seconds
      

1747       proc sql noprint;
1748       
1749       create table bar_confirmed as
1750       select unique snapshot, 'Confirmed' as type, sum(confirmed) as cumulative_cases
1751       from confirmed_data
1752       group by snapshot
1753       order by snapshot;
NOTE: Table WORK.BAR_CONFIRMED created, with 83 rows and 3 columns.

1754       
1755       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1755     !       run;
1756       
1757       data bar_confirmed; set bar_confirmed;
1758       on_this_day=cumulative_cases-lag(cumulative_cases);
1759       run;

NOTE: Missing values were generated as a result of performing an operation on missing values.
35                                                   The SAS System                         07:20 Tuesday, April 14, 2020

      Each place is given by: (Number of times) at (Line):(Column).
      1 at 1758:29   
NOTE: There were 83 observations read from the data set WORK.BAR_CONFIRMED.
NOTE: The data set WORK.BAR_CONFIRMED has 83 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1760       
1761       ods html anchor="newbar";
1762       ods graphics / imagename="coronavirus_covid19_newbar";
1763       
1764       title1 h=18pt font='albany amt/bold' c=gray33 "COVID-19 Coronavirus - Number of new confirmed cases each day";
1765       title2 h=4pt ' ';
1766       
1767       ods graphics / width=900px height=600px;
1768       
1769       proc sgplot data=bar_confirmed noborder;
1770       /*
1771       format snapshot nldate20.;
1772       */
1773       format snapshot nldate20.;
1774       format on_this_day comma10.0;
1775       label on_this_day='Cases on this day';
1776       vbarparm category=snapshot response=on_this_day /
1777        fillattrs=(color=orange)
1778        outlineattrs=(color=gray77)
1779        tip=(snapshot on_this_day)
1780        tipformat=(weekdate30. auto auto)
1781        ;
1782       yaxis display=(nolabel noline noticks)
1783        grid gridattrs=(pattern=dot color=gray88)
1784        valueattrs=(color=gray33 size=10pt)
1785       /* thresholdmax=1 */
1786        ;
1787       xaxis display=(nolabel)
1788        type=time values=("&mindate"d to "&maxdate"d by &byval)
1789        valueattrs=(color=gray33 size=10pt);
1790       run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           11.03 seconds
      cpu time            0.14 seconds
      
NOTE: There were 83 observations read from the data set WORK.BAR_CONFIRMED.

1791       
1792       
1793       /* -------------------------------------------------------------------- */
1794       
1795       /*
1796       Create drilldown graphs for each country.
1797       We will jump to these graphs using html 'anchors' (by the name of the country)
1798       */
1799       
1800       proc sql noprint;
1801       
1802       create table graph_confirmed as
1803       select unique country_region, snapshot, sum(confirmed) as confirmed
1804       from confirmed_data
1805       group by country_region, snapshot
1806       order by country_region, snapshot;
NOTE: Table WORK.GRAPH_CONFIRMED created, with 15853 rows and 3 columns.

1807       
1808       create table graph_recovered as
1809       select unique country_region, snapshot, sum(recovered) as recovered
1810       from recovered_data
1811       group by country_region, snapshot
1812       order by country_region, snapshot;
NOTE: Table WORK.GRAPH_RECOVERED created, with 15853 rows and 3 columns.

1813       
1814       create table graph_deaths as
1815       select unique country_region, snapshot, sum(deaths) as deaths
1816       from death_data
1817       group by country_region, snapshot
1818       order by country_region, snapshot;
NOTE: Table WORK.GRAPH_DEATHS created, with 15853 rows and 3 columns.

1819       
36                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1820       
1821       create table graph_all as
1822       select unique graph_confirmed.*, graph_recovered.recovered
1823       from graph_confirmed left join graph_recovered
1824       on (graph_confirmed.country_region=graph_recovered.country_region) and
1824     ! (graph_confirmed.snapshot=graph_recovered.snapshot);
NOTE: Table WORK.GRAPH_ALL created, with 15853 rows and 4 columns.

1825       
1826       create table graph_all as
1827       select unique graph_all.*, graph_deaths.deaths
1828       from graph_all left join graph_deaths
1829       on (graph_all.country_region=graph_deaths.country_region) and (graph_all.snapshot=graph_deaths.snapshot);
WARNING: This CREATE TABLE statement recursively references the target table. A consequence of this is a possible data 
         integrity problem.
NOTE: Table WORK.GRAPH_ALL created, with 15853 rows and 5 columns.

1830       
1831       quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.15 seconds
      cpu time            0.07 seconds
      

1831     !       run;
1832       
1833       data graph_all; set graph_all;
1834       if country_region='United Arab Emirates' then country_region='UAE';
1835       if country_region='Iran (Islamic Republic of)' then country_region='Iran';
1836       run;

NOTE: There were 15853 observations read from the data set WORK.GRAPH_ALL.
NOTE: The data set WORK.GRAPH_ALL has 15853 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1837       
1838       proc sort data=graph_all out=graph_all;
1839       by country_region snapshot;
1840       run;

NOTE: There were 15853 observations read from the data set WORK.GRAPH_ALL.
NOTE: The data set WORK.GRAPH_ALL has 15853 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1841       
1842       ods html anchor="#byval(country_region)";
1843       ods graphics / imagename="coronavirus_covid19_#byval(country_region)";
1844       
1845       options nobyline;
1846       title1 h=18pt font='albany amt/bold' c=gray33 "COVID-19 Coronavirus cases in: #byval(country_region)";
1847       title2 h=4pt ' ';
1848       
1849       ods graphics / width=800px height=600px;
1850       proc sgplot data=graph_all noborder;
1851       by country_region;
1852       /*
1853       format snapshot nldate.;
1854       */
1855       format snapshot weekdate30.;
1856       format confirmed recovered deaths comma10.0;
1857       series y=confirmed x=snapshot / name='confirmed'
1858        lineattrs=(color=red thickness=2px)
1859        markers markerattrs=(color=red symbol=square);
1860       series y=deaths x=snapshot / name='deaths'
1861        lineattrs=(color=gray77 thickness=2px)
1862        markers markerattrs=(color=gray77 symbol=circle);
1863       keylegend 'confirmed' 'recovered' 'deaths' /
1864        location=inside position=topleft opaque border
1865        across=1 outerpad=(left=10pt top=10pt);
1866       yaxis display=(nolabel noline noticks) min=0
1867        integer thresholdmax=1 grid gridattrs=(pattern=dot color=gray88)
1868        valueattrs=(color=gray33 size=10pt);
1869       xaxis display=(nolabel)
1870        type=time values=("&mindate"d to "&maxdate"d by &byval)
1871        valueattrs=(color=gray33 size=10pt);
1872       run;
37                                                   The SAS System                         07:20 Tuesday, April 14, 2020


NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           25.41 seconds
      cpu time            9.70 seconds
      
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: The IMAGENAME option or the output name contains invalid characters. coronavirus_covid19_Bonaire_ Sint 
         Eustatius and Saba will be used as the image name prefix.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: The IMAGENAME option or the output name contains invalid characters. coronavirus_covid19_Congo _Brazzaville_ 
         will be used as the image name prefix.
WARNING: The IMAGENAME option or the output name contains invalid characters. coronavirus_covid19_Congo _Kinshasa_ will 
         be used as the image name prefix.
WARNING: The IMAGENAME option or the output name contains invalid characters. coronavirus_covid19_Cote d_Ivoire will be 
         used as the image name prefix.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: The IMAGENAME option or the output name contains invalid characters. coronavirus_covid19_Korea_ South will be 
         used as the image name prefix.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: The IMAGENAME option or the output name contains invalid characters. coronavirus_covid19_Taiwan_ will be used 
         as the image name prefix.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
WARNING: Y=DEATHS is invalid. The option expects that the column not contain all missing values.
NOTE: There were 15853 observations read from the data set WORK.GRAPH_ALL.

1873       
1874       /* ------------------------------------------------------------------ */
1875       
1876       /* We don't have Hong Kong and Macau in our world map */
1877       /* That's ok - those polygons would be too small to see anyway */
1878       /* They still get a red bubble. */
1879       /*
1880       */
1881       title "country_region names not in the map";
1882       proc print data=not_in_map (where=(country_region not in (
1883        'Monaco'
1884        'Macau'
1885        'Cabo Verde'
1886        'Macao SAR'
1887        'Hong Kong SAR'
1888        'North Ireland'
1889        'San Marino'
1890        'Channel Islands'
1891        'Taipei and environs'
1892        'occupied Palestinian territory'
1893        'Cruise Ship'
1894        'Diamond Princess'
1895        'Republic of the Congo'
1896        'East Timor'
1897        'Timor-Leste'
38                                                   The SAS System                         07:20 Tuesday, April 14, 2020

1898        'West Bank and Gaza'
1899        'MS Zaandam'
1900        'Bonaire, Sint Eustatius and Saba'
1901        )));
1902       run;

NOTE: No observations were selected from data set WORK.NOT_IN_MAP.
NOTE: There were 0 observations read from the data set WORK.NOT_IN_MAP.
      WHERE country_region not in ('Bonaire, Sint Eustatius and Saba', 'Cabo Verde', 'Channel Islands', 'Cruise Ship', 
      'Diamond Princess', 'East Timor', 'Hong Kong SAR', 'MS Zaandam', 'Macao SAR', 'Macau', 'Monaco', 'North Ireland', 
      'Republic of the Congo', 'San Marino', 'Taipei and environs', 'Timor-Leste', 'West Bank and Gaza', 'occupied 
      Palestinian territory');
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

1903       /*
1904       data foo; set mapsgfk.world_attr (where=(index(idname,'Venezuela')^=0));
1905       run;
1906       proc print data=foo; run;
1907       proc print data=map_data; run;
1908       */
1909       
1910       quit;
1911       ODS HTML CLOSE;
1912       ODS LISTING;
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           1:18.15
      cpu time            23.21 seconds
      
